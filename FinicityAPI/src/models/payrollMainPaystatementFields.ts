/**
 * Finicity APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  bigint,
  expandoObject,
  number,
  optional,
  Schema,
  string,
} from '../schema';

export interface PayrollMainPaystatementFields {
  /** Pay date for a pay period */
  payDate: bigint;
  /** Start date for a pay period */
  startDate?: bigint;
  /** End date for a pay period */
  endDate?: bigint;
  /** The sum total of the number of hours worked each week for a pay period. */
  payPeriodHours?: number;
  /** Gross pay amount for a pay period */
  grossPayAmount: number;
  /** YTD gross pay amount at the time of the payment */
  grossPayAmountYTD?: number;
  /** Net pay amount for a pay period */
  netPayAmount: number;
  /** YTD net pay amount at the time of the payment */
  netPayAmountYTD?: number;
  /** The pay frequency: <br> * `Daily` <br> * `Weekly` <br> * `Bi-Weekly` <br> * `Bi-Weekly Odd` (Bi-Weekly pay on odd weeks) <br> * `Bi-Weekly Even` (Bi-Weekly pay on even weeks) <br> * `Semi-Monthly` <br> * `Monthly` <br> * `Quarterly` <br>* `Semi-Annual` <br> * `Annual` <br>  * `Every 2.6 wks` <br> * `Every 4 wks` <br> * `Every 5.2 wks` */
  payFrequency: string;
  /** The pay type is `Salary`, `Hourly`, or `Daily`. */
  payType?: string;
  [key: string]: unknown;
}

export const payrollMainPaystatementFieldsSchema: Schema<PayrollMainPaystatementFields> = expandoObject(
  {
    payDate: ['payDate', bigint()],
    startDate: ['startDate', optional(bigint())],
    endDate: ['endDate', optional(bigint())],
    payPeriodHours: ['payPeriodHours', optional(number())],
    grossPayAmount: ['grossPayAmount', number()],
    grossPayAmountYTD: ['grossPayAmountYTD', optional(number())],
    netPayAmount: ['netPayAmount', number()],
    netPayAmountYTD: ['netPayAmountYTD', optional(number())],
    payFrequency: ['payFrequency', string()],
    payType: ['payType', optional(string())],
  }
);
