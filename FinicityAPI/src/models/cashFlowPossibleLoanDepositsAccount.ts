/**
 * Finicity APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  bigint,
  expandoObject,
  lazy,
  number,
  Schema,
  string,
} from '../schema';
import {
  CashFlowTransactions,
  cashFlowTransactionsSchema,
} from './cashFlowTransactions';

export interface CashFlowPossibleLoanDepositsAccount {
  /** Finicity account ID */
  id: string;
  /** The name(s) of the account owner(s), retrieved from the institution. */
  ownerName: string;
  /** The mailing address of the account owner, retrieved from the institution. */
  ownerAddress: string;
  /** The account name from the institution */
  name: string;
  /** The account number from the institution (obfuscated) */
  number: string;
  /** CFR: `ALL` (`checking` / `savings` / `loan` / `mortgage` / `credit card` / `CD` / `MM` / `investment`â€¦) */
  type: string;
  /** The status of the most recent aggregation attempt for this account (non-zero means the account was not accessed successfully for this report, and additional fields for this account may not be reliable) */
  aggregationStatusCode: string;
  /** The cleared balance of the account as-of `balanceDate` */
  currentBalance: number;
  /** Available balance */
  availableBalance: number;
  /** A timestamp showing when the `balance` was captured */
  balanceDate: bigint;
  /** a `transactions` record */
  transactions: CashFlowTransactions[];
  [key: string]: unknown;
}

export const cashFlowPossibleLoanDepositsAccountSchema: Schema<CashFlowPossibleLoanDepositsAccount> = expandoObject(
  {
    id: ['id', string()],
    ownerName: ['ownerName', string()],
    ownerAddress: ['ownerAddress', string()],
    name: ['name', string()],
    number: ['number', string()],
    type: ['type', string()],
    aggregationStatusCode: ['aggregationStatusCode', string()],
    currentBalance: ['currentBalance', number()],
    availableBalance: ['availableBalance', number()],
    balanceDate: ['balanceDate', bigint()],
    transactions: [
      'transactions',
      array(lazy(() => cashFlowTransactionsSchema)),
    ],
  }
);
