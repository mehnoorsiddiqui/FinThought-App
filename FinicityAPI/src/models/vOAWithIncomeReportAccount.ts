/**
 * Finicity APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  bigint,
  expandoObject,
  lazy,
  number,
  Schema,
  string,
} from '../schema';
import { AccountDetail, accountDetailSchema } from './accountDetail';
import { AssetSummary, assetSummarySchema } from './assetSummary';
import {
  VOAIReportIncomeStreamRecord,
  vOAIReportIncomeStreamRecordSchema,
} from './vOAIReportIncomeStreamRecord';
import {
  VOAWithIncomeReportTransaction,
  vOAWithIncomeReportTransactionSchema,
} from './vOAWithIncomeReportTransaction';

export interface VOAWithIncomeReportAccount {
  /** The generated FInicity ID of the account */
  id: bigint;
  /** The account number from the institution (all digits except the last four are obfuscated) */
  number: string;
  /** The name(s) of the account owner(s). This field is optional. If no owner information is available, this field will not appear in the report. */
  ownerName: string;
  /** The mailing address of the account owner(s). This field is optional. If no owner information is available, this field will not appear in the report. */
  ownerAddress: string;
  /** The account name from the institution */
  name: string;
  /** One of the values from Account Types */
  type: string;
  /** The available balance for the account */
  availableBalance: number;
  /** The status of the most recent aggregation attempt (see Handling Aggregation Status Codes) */
  aggregationStatusCode: number;
  /** The cleared balance of the account as-of balanceDate */
  balance: number;
  /** A timestamp showing when the balance was captured (see Handling Dates and Times) */
  balanceDate: bigint;
  /** The average monthly balance of this account */
  averageMonthlyBalance: number;
  /** An array of transactions belonging to the account. */
  transactions: VOAWithIncomeReportTransaction[];
  /** An asset record for the account */
  asset: AssetSummary;
  /** A details record for the account */
  details: AccountDetail;
  /** A list of income stream records */
  incomeStreams: VOAIReportIncomeStreamRecord[];
  /** The count for the total number of insufficient funds transactions, based on the `fromDate` of the report. */
  totNumberInsufficientFundsFeeDebitTxAccount: bigint;
  /** The count for the total number of insufficient funds transactions for the last two months, based on the `fromDate` of the report. */
  totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount: bigint;
  /** The count for the total number of insufficient funds transactions for the last six months, based on the `fromDate` of the report. */
  totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount: bigint;
  /** The number of days since the most recent insufficient funds transaction, based on the `fromDate` of the report. */
  totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount: bigint;
  [key: string]: unknown;
}

export const vOAWithIncomeReportAccountSchema: Schema<VOAWithIncomeReportAccount> = expandoObject(
  {
    id: ['id', bigint()],
    number: ['number', string()],
    ownerName: ['ownerName', string()],
    ownerAddress: ['ownerAddress', string()],
    name: ['name', string()],
    type: ['type', string()],
    availableBalance: ['availableBalance', number()],
    aggregationStatusCode: ['aggregationStatusCode', number()],
    balance: ['balance', number()],
    balanceDate: ['balanceDate', bigint()],
    averageMonthlyBalance: ['averageMonthlyBalance', number()],
    transactions: [
      'transactions',
      array(lazy(() => vOAWithIncomeReportTransactionSchema)),
    ],
    asset: ['asset', lazy(() => assetSummarySchema)],
    details: ['details', lazy(() => accountDetailSchema)],
    incomeStreams: [
      'incomeStreams',
      array(lazy(() => vOAIReportIncomeStreamRecordSchema)),
    ],
    totNumberInsufficientFundsFeeDebitTxAccount: [
      'totNumberInsufficientFundsFeeDebitTxAccount',
      bigint(),
    ],
    totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount: [
      'totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount',
      bigint(),
    ],
    totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount: [
      'totNumberInsufficientFundsFeeDebitTxOver6MonthsAccount',
      bigint(),
    ],
    totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount: [
      'totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount',
      bigint(),
    ],
  }
);
