/**
 * Finicity APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  bigint,
  expandoObject,
  lazy,
  nullable,
  number,
  optional,
  Schema,
  string,
} from '../schema';
import { Categorization, categorizationSchema } from './categorization';
import {
  TransactionTypeEnum,
  transactionTypeEnumSchema,
} from './transactionTypeEnum';

export interface Transaction {
  /** The Finicity ID of the transaction */
  id: bigint;
  /** The total amount of the transaction. Transactions for deposits are positive values, withdrawals and debits are negative values. */
  amount: number;
  /** The Finicity ID of the account associated with this transaction */
  accountId: bigint;
  /** The Finicity ID of the customer associated with this transaction */
  customerId: bigint;
  /** One of active, pending, or shadow (see Pending Transactions and Shadow Transactions) */
  status: string;
  /** The description of the transaction, as provided by the institution (often known as payee). In the event that this field is left blank by the institution, Finicity will pass a value of "No description provided by institution‚Äù. All other values are provided by the institution. */
  description: string;
  /** The memo field of the transaction, as provided by the institution. The institution must provide either a description, a memo, or both. It is recommended to concatenate the two fields into a single value */
  memo?: string;
  /** A timestamp showing when the transaction was posted or cleared by the institution (see Handling Dates and Times). **Nullable & not required for student loan transaction data.** */
  postedDate: bigint | null;
  /** An optional timestamp showing when the transaction occurred, as provided by the institution (see Handling Dates and Times). */
  transactionDate?: bigint | null;
  /** A timestamp showing when the transaction was made effective on an account by an institution. Typically aligns with billing due dates. */
  effectiveDate?: string | null;
  /** The first timestamp recorded in effectiveDate by Finicity for a transaction. */
  firstEffectiveDate?: string | null;
  /** A timestamp showing when the transaction was added to the Finicity system. (See Handling Dates and Times.) This value usually is not interesting outside of Finicity. */
  createdDate: bigint;
  type?: TransactionTypeEnum;
  /** The check number of the transaction, as provided by the institution */
  checkNum?: number;
  /** The portion of the transaction allocated to escrow, if available */
  escrowAmount?: number;
  /** The portion of the transaction allocated to fee, if available */
  feeAmount?: number;
  /** The portion of the transaction allocated to interest, if available */
  interestAmount?: number;
  /** The portion of the transaction allocated to principal, if available */
  principalAmount?: number;
  /** The number of units (e.g. individual shares) in the transaction, if available */
  unitQuantity?: number;
  /** Share Price for investment unit (e.g., stocks, mutual funds) */
  unitPrice?: number;
  categorization?: Categorization;
  /** The type of sub account from which funds came */
  subaccountSecurityType?: string;
  /** Transaction commission */
  commissionAmount?: number;
  /** Ticker symbol for the investment related to the transaction */
  ticker?: string;
  /** Finicity derived field that normalizes the transaction type from the FI */
  investmentTransactionType?: string;
  /** Taxes applicable to the investment trade */
  taxesAmount?: number;
  /** If the foreign amount value is present then this is the currency code of that foreign amount */
  currencySymbol?: string;
  symbol?: string;
  unitAction?: string;
  confirmationNumber?: string;
  payeeId?: string;
  extendedPayeeName?: string;
  originalCurrency?: string;
  runningBalanceAmount?: number;
  escrowTaxAmount?: number;
  escrowInsuranceAmount?: number;
  escrowPmiAmount?: number;
  escrowFeesAmount?: number;
  escrowOtherAmount?: number;
  inv401kSource?: string;
  relatedInstitutionTradeId?: string;
  penaltyAmount?: number;
  sharesPerContract?: number;
  stateWithholding?: number;
  securedType?: string;
  reveralInstitutionTransactionId?: string;
  [key: string]: unknown;
}

export const transactionSchema: Schema<Transaction> = expandoObject({
  id: ['id', bigint()],
  amount: ['amount', number()],
  accountId: ['accountId', bigint()],
  customerId: ['customerId', bigint()],
  status: ['status', string()],
  description: ['description', string()],
  memo: ['memo', optional(string())],
  postedDate: ['postedDate', nullable(bigint())],
  transactionDate: ['transactionDate', optional(nullable(bigint()))],
  effectiveDate: ['effectiveDate', optional(nullable(string()))],
  firstEffectiveDate: ['firstEffectiveDate', optional(nullable(string()))],
  createdDate: ['createdDate', bigint()],
  type: ['type', optional(transactionTypeEnumSchema)],
  checkNum: ['checkNum', optional(number())],
  escrowAmount: ['escrowAmount', optional(number())],
  feeAmount: ['feeAmount', optional(number())],
  interestAmount: ['interestAmount', optional(number())],
  principalAmount: ['principalAmount', optional(number())],
  unitQuantity: ['unitQuantity', optional(number())],
  unitPrice: ['unitPrice', optional(number())],
  categorization: [
    'categorization',
    optional(lazy(() => categorizationSchema)),
  ],
  subaccountSecurityType: ['subaccountSecurityType', optional(string())],
  commissionAmount: ['commissionAmount', optional(number())],
  ticker: ['ticker', optional(string())],
  investmentTransactionType: ['investmentTransactionType', optional(string())],
  taxesAmount: ['taxesAmount', optional(number())],
  currencySymbol: ['currencySymbol', optional(string())],
  symbol: ['symbol', optional(string())],
  unitAction: ['unitAction', optional(string())],
  confirmationNumber: ['confirmationNumber', optional(string())],
  payeeId: ['payeeId', optional(string())],
  extendedPayeeName: ['extendedPayeeName', optional(string())],
  originalCurrency: ['originalCurrency', optional(string())],
  runningBalanceAmount: ['runningBalanceAmount', optional(number())],
  escrowTaxAmount: ['escrowTaxAmount', optional(number())],
  escrowInsuranceAmount: ['escrowInsuranceAmount', optional(number())],
  escrowPmiAmount: ['escrowPmiAmount', optional(number())],
  escrowFeesAmount: ['escrowFeesAmount', optional(number())],
  escrowOtherAmount: ['escrowOtherAmount', optional(number())],
  inv401kSource: ['inv401kSource', optional(string())],
  relatedInstitutionTradeId: ['relatedInstitutionTradeId', optional(string())],
  penaltyAmount: ['penaltyAmount', optional(number())],
  sharesPerContract: ['sharesPerContract', optional(number())],
  stateWithholding: ['stateWithholding', optional(number())],
  securedType: ['securedType', optional(string())],
  reveralInstitutionTransactionId: [
    'reveralInstitutionTransactionId',
    optional(string()),
  ],
});
