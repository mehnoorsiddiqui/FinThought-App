/**
 * Finicity APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  bigint,
  expandoObject,
  lazy,
  nullable,
  number,
  optional,
  Schema,
  string,
} from '../schema';
import { AccountTypeEnum, accountTypeEnumSchema } from './accountTypeEnum';
import {
  CustomerAccountDetail,
  customerAccountDetailSchema,
} from './customerAccountDetail';
import {
  CustomerAccountPosition,
  customerAccountPositionSchema,
} from './customerAccountPosition';

/** A customer account represents a bank account such as a checking or savings that the customer has added via the Connect interface */
export interface CustomerAccount {
  /** The generated FInicity ID of the account */
  id: string;
  /** Use the `accountNumberDisplay` field. Starting July 1, 2021 the `number` field will sunset with limited support until April 1, 2022, at which time it will be deprecated (no longer available). */
  number: string;
  /** The account number from a financial institution in truncated format: <br> <br> <br> <br> * Last four digits - 1234 <br> * Last four digits with suffix - 1234-9 <br> * Full value for string accounts - john@gmail.com. */
  accountNumberDisplay: string;
  /** The last 4 digits of the ACH account number */
  realAccountNumberLast4?: number;
  /** The account name from the institution */
  name: string;
  /** The cleared balance of the account as-of balanceDate */
  balance: number;
  /** One of the values from Account Types */
  type: AccountTypeEnum;
  /** The status of the most recent aggregation attempt. This will not be present until you have run your first aggregation for the account. */
  aggregationStatusCode?: number;
  /** pending during account discovery, always active following successful account activation */
  status: string;
  /** The Finicity ID of the customer associated with this account */
  customerId: string;
  /** The Finicity ID of the institution for this account */
  institutionId: string;
  /** A timestamp showing when the balance was captured (see Handling Dates and Times) */
  balanceDate: bigint;
  /** A timestamp showing the last successful aggregation of the account (see Handling Dates and Times). This will not be present until you have run your first aggregation for the account. */
  aggregationSuccessDate?: bigint;
  /** A timestamp showing the last aggregation attempt, whether successful or not (see Handling Dates and Times). This will not be present until you have run your first aggregation for the account. */
  aggregationAttemptDate?: bigint;
  /** A timestamp showing when the account was added to the Finicity system (see Handling Dates and Times) */
  createdDate: bigint;
  /** The currency of the account */
  currency: string;
  /** The date of the latest transaction on the account (see Handling Dates and Times). This will not be present until you have run your first aggregation for the account. */
  lastTransactionDate?: bigint;
  /** The date of the oldest transaction in the transactions for the account. */
  oldestTransactionDate: bigint;
  /** The institution login ID (see Institution Logins) */
  institutionLoginId: bigint;
  /** Additional Account Details */
  detail?: CustomerAccountDetail;
  /** Investment holdings */
  position?: CustomerAccountPosition[];
  /** Display position of the account at the financial institution 1 being the top listed account */
  displayPosition: number;
  /** The Finicity assigned accountId for the account one level higher in the student loan account hierarchy */
  parentAccount?: bigint | null;
  [key: string]: unknown;
}

export const customerAccountSchema: Schema<CustomerAccount> = expandoObject({
  id: ['id', string()],
  number: ['number', string()],
  accountNumberDisplay: ['accountNumberDisplay', string()],
  realAccountNumberLast4: ['realAccountNumberLast4', optional(number())],
  name: ['name', string()],
  balance: ['balance', number()],
  type: ['type', accountTypeEnumSchema],
  aggregationStatusCode: ['aggregationStatusCode', optional(number())],
  status: ['status', string()],
  customerId: ['customerId', string()],
  institutionId: ['institutionId', string()],
  balanceDate: ['balanceDate', bigint()],
  aggregationSuccessDate: ['aggregationSuccessDate', optional(bigint())],
  aggregationAttemptDate: ['aggregationAttemptDate', optional(bigint())],
  createdDate: ['createdDate', bigint()],
  currency: ['currency', string()],
  lastTransactionDate: ['lastTransactionDate', optional(bigint())],
  oldestTransactionDate: ['oldestTransactionDate', bigint()],
  institutionLoginId: ['institutionLoginId', bigint()],
  detail: ['detail', optional(lazy(() => customerAccountDetailSchema))],
  position: [
    'position',
    optional(array(lazy(() => customerAccountPositionSchema))),
  ],
  displayPosition: ['displayPosition', number()],
  parentAccount: ['parentAccount', optional(nullable(bigint()))],
});
