/**
 * Finicity APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import {
  GenerateConnectURLRequestFixV2,
  generateConnectURLRequestFixV2Schema,
} from '../models/generateConnectURLRequestFixV2';
import {
  GenerateConnectURLRequestLiteV2,
  generateConnectURLRequestLiteV2Schema,
} from '../models/generateConnectURLRequestLiteV2';
import {
  GenerateConnectURLResponse,
  generateConnectURLResponseSchema,
} from '../models/generateConnectURLResponse';
import {
  GenerateV2ConnectEmailRequest,
  generateV2ConnectEmailRequestSchema,
} from '../models/generateV2ConnectEmailRequest';
import {
  GenerateV2ConnectEmailResponse,
  generateV2ConnectEmailResponseSchema,
} from '../models/generateV2ConnectEmailResponse';
import {
  GenerateV2ConnectURLRequest,
  generateV2ConnectURLRequestSchema,
} from '../models/generateV2ConnectURLRequest';
import {
  GenerateV2ConnectURLRequestJointBorrower,
  generateV2ConnectURLRequestJointBorrowerSchema,
} from '../models/generateV2ConnectURLRequestJointBorrower';
import {
  V2ConnectEmailRequestJointBorrower,
  v2ConnectEmailRequestJointBorrowerSchema,
} from '../models/v2ConnectEmailRequestJointBorrower';
import { optional, string } from '../schema';
import { BaseController } from './baseController';

export class ConnectController extends BaseController {
  /**
   * Generates a Connect 2.0 URL link to add within your own applications. Use the `experience` parameter
   * to call Connect (per session) in the body of the request. Configure the `experience` parameter to
   * change the brand color, logo, icon, which credit decisioning report to generate when the Connect
   * application completes, and more.
   *
   * **Note**: Contact your Sales Account Team to set up the `experience` parameter.
   *
   * **MVS Developers** : You can pre-populate the consumer’s SSN on the Find employment records page at
   * the beginning of the MVS payroll app. Pass the SSN value for the consumer in the body of the request
   * call.
   *
   * @param accept   application/json, application/xml
   * @param body     Expected body to be sent with the request
   * @param language The language parameter is used when generating a 2.0
   *                                                       Connect URL. Currently, the parameter supports English,
   *                                                       Spanish (United States), and French (Canada). <br> <br> Add
   *                                                       a language parameter with either `es` or `fr` (or `fr-CA`)
   *                                                       to generate a translated Connect URL link.
   * @return Response from the API call
   */
  async generateV2ConnectURL(
    accept: string,
    body: GenerateV2ConnectURLRequest,
    language?: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<GenerateConnectURLResponse>> {
    const req = this.createRequest('POST', '/connect/v2/generate');
    const mapped = req.prepareArgs({
      accept: [accept, string()],
      body: [body, generateV2ConnectURLRequestSchema],
      language: [language, optional(string())],
    });
    req.header('Accept', mapped.accept);
    req.query('language', mapped.language);
    req.json(mapped.body);
    return req.callAsJson(generateConnectURLResponseSchema, requestOptions);
  }

  /**
   * Connect Lite is a variation of Connect Full, which has a limited set of features.
   * • Sign in, user’s credentials, and Multi-Factor Authentication (MFA).
   * • No user account management.
   *
   * The Connect Web SDK isn’t a requirement when using Connect lite. However, if you want to use the SDK
   * events, routes, and user events, then you need to integrate with the Connect Web SDK.
   *
   * @param accept   application/json, application/xml
   * @param body     Expected body to be sent with the request
   * @param language The language parameter is used when generating a 2.0
   *                                                           Connect URL. Currently, the parameter supports English,
   *                                                           Spanish (United States), and French (Canada). <br> <br>
   *                                                           Add a language parameter with either `es` or `fr` (or
   *                                                           `fr-CA`) to generate a translated Connect URL link.
   * @return Response from the API call
   */
  async generateV2LiteConnectURL(
    accept: string,
    body: GenerateConnectURLRequestLiteV2,
    language?: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<GenerateConnectURLResponse>> {
    const req = this.createRequest('POST', '/connect/v2/generate/lite');
    const mapped = req.prepareArgs({
      accept: [accept, string()],
      body: [body, generateConnectURLRequestLiteV2Schema],
      language: [language, optional(string())],
    });
    req.header('Accept', mapped.accept);
    req.query('language', mapped.language);
    req.json(mapped.body);
    return req.callAsJson(generateConnectURLResponseSchema, requestOptions);
  }

  /**
   * Use the connect fix endpoint when the following conditions occur:
   * * The connection to the user’s financial institution is lost.
   * * The user’s credentials were updated (for any number of reasons).
   * * The user’s MFA challenge has expired.
   *
   * @param accept   application/json, application/xml
   * @param body     Expected body to be sent with the request
   * @param language The language parameter is used when generating a 2.0
   *                                                          Connect URL. Currently, the parameter supports English,
   *                                                          Spanish (United States), and French (Canada). <br> <br>
   *                                                          Add a language parameter with either `es` or `fr` (or `fr-
   *                                                          CA`) to generate a translated Connect URL link.
   * @return Response from the API call
   */
  async generateV2FixConnectURL(
    accept: string,
    body: GenerateConnectURLRequestFixV2,
    language?: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<GenerateConnectURLResponse>> {
    const req = this.createRequest('POST', '/connect/v2/generate/fix');
    const mapped = req.prepareArgs({
      accept: [accept, string()],
      body: [body, generateConnectURLRequestFixV2Schema],
      language: [language, optional(string())],
    });
    req.header('Accept', mapped.accept);
    req.query('language', mapped.language);
    req.json(mapped.body);
    return req.callAsJson(generateConnectURLResponseSchema, requestOptions);
  }

  /**
   * Send a Connect email to the consumer.
   * Use the `experience` parameter to call Connect (per session) in the body of the request. When the
   * consumer opens the email, they’ll click a button that opens the Connect application.
   *
   * Configure the `experience` parameter to change the brand color, logo, icon, which credit decisioning
   * report to generate when the Connect application completes, and more.
   *
   * **Note**: Contact your Sales Account Team to set up the `experience` parameter.
   *
   * **MVS Developers**: You can prepopulate the consumer’s SSN to display on the Find employment records
   * page at the beginning of the MVS payroll app. Pass the SSN value for the consumer in the body of the
   * request call.
   *
   * @param accept application/json
   * @param body   Expected body to be sent with the request
   * @return Response from the API call
   */
  async sendV2ConnectEmail(
    accept: string,
    body: GenerateV2ConnectEmailRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<GenerateV2ConnectEmailResponse>> {
    const req = this.createRequest('POST', '/connect/v2/send/email');
    const mapped = req.prepareArgs({
      accept: [accept, string()],
      body: [body, generateV2ConnectEmailRequestSchema],
    });
    req.header('Accept', mapped.accept);
    req.json(mapped.body);
    return req.callAsJson(generateV2ConnectEmailResponseSchema, requestOptions);
  }

  /**
   * Generates a Connect 2.0 URL link to add within your own applications. Use the `experience` parameter
   * to call Connect (per session) in the body of the request. Configure the `experience` parameter to
   * change the brand color, logo, icon, which credit decisioning report to generate when the Connect App
   * completes, and more.
   *
   * **Note**: Contact your Sales Account Team to set up the `experience` parameter.
   *
   * MVS prompts both the primary and joint borrower to enter each of their financial, payroll, and
   * paystub information in the same Connect session.
   *
   * You can prepopulate the consumer’s SSN to display on the Find employment records page at the
   * beginning of the MVS payroll app. Pass the SSN value for the consumer in the body of the request
   * call.
   *
   * @param accept   application/json, application/xml
   * @param body     Expected body to be sent with the request
   * @param language The language parameter is used when generating
   *                                                                    a 2.0 Connect URL. Currently, the parameter
   *                                                                    supports English, Spanish (United States), and
   *                                                                    French (Canada). <br> <br> Add a language
   *                                                                    parameter with either `es` or `fr` (or `fr-CA`)
   *                                                                    to generate a translated Connect URL link.
   * @return Response from the API call
   */
  async generateV2ConnectURLJointBorrower(
    accept: string,
    body: GenerateV2ConnectURLRequestJointBorrower,
    language?: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<GenerateConnectURLResponse>> {
    const req = this.createRequest(
      'POST',
      '/connect/v2/generate/jointBorrower'
    );
    const mapped = req.prepareArgs({
      accept: [accept, string()],
      body: [body, generateV2ConnectURLRequestJointBorrowerSchema],
      language: [language, optional(string())],
    });
    req.header('Accept', mapped.accept);
    req.query('language', mapped.language);
    req.json(mapped.body);
    return req.callAsJson(generateConnectURLResponseSchema, requestOptions);
  }

  /**
   * Send a Connect email to at least one of the joint borrower’s email addresses. When the consumer
   * opens the email, MVS prompts both the primary and joint borrower to enter each of their financial,
   * payroll, and paystub information in the same Connect session.
   *
   * Use the `experience` parameter to call Connect (per session) in the body of the request. Configure
   * the `experience` parameter to change the brand color, logo, icon, which credit decisioning report to
   * generate when the Connect application completes, and more.
   *
   * **Note**: Contact your Sales Account Team to set up the `experience` parameter.
   *
   * You can prepopulate the consumer’s SSN to display on the Find employment records page at the
   * beginning of the MVS payroll app. Pass the SSN value for the consumer in the body of the request
   * call.
   *
   * @param accept application/json
   * @param body   Expected body to be sent with the request
   * @return Response from the API call
   */
  async sendV2ConnectEmailJointBorrower(
    accept: string,
    body: V2ConnectEmailRequestJointBorrower,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<GenerateV2ConnectEmailResponse>> {
    const req = this.createRequest(
      'POST',
      '/connect/v2/send/email/jointBorrower'
    );
    const mapped = req.prepareArgs({
      accept: [accept, string()],
      body: [body, v2ConnectEmailRequestJointBorrowerSchema],
    });
    req.header('Accept', mapped.accept);
    req.json(mapped.body);
    return req.callAsJson(generateV2ConnectEmailResponseSchema, requestOptions);
  }
}
