/**
 * Finicity APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import { Error1Error } from '../errors/error1Error';
import {
  GenerateVOIReportResponse,
  generateVOIReportResponseSchema,
} from '../models/generateVOIReportResponse';
import {
  RequestConstraintsVOI,
  requestConstraintsVOISchema,
} from '../models/requestConstraintsVOI';
import { bigint, optional, string } from '../schema';
import { BaseController } from './baseController';

export class VerifyIncomeController extends BaseController {
  /**
   * Generate a Verification of Income (VOI) report for all checking, savings, and money market accounts
   * for the given customer. This service retrieves up to two years of transaction history for each
   * account and uses this information to generate the VOI report.
   *
   * This is a premium service. The billing rate is the variable rate for Verification of Income under
   * the current subscription plan. The billable event is the successful generation of a VOI report.
   *
   * HTTP status of 202 (Accepted) means the report is being generated. When the report is finished, a
   * notification will be sent to the specified report callback URL, if specified.
   *
   * If no account of type of checking, savings, or money market is found, the service will return HTTP
   * 400 (Bad Request).
   *
   * @param customerId   Finicity ID for the customer
   * @param accept       Replace 'json' with 'xml' if preferred
   * @param contentType  Replace 'json' with 'xml' if preferred
   * @param callbackUrl  The Report Listener URL to receive notifications (optional,
   *                                                     must be URL-encoded).
   * @param body
   * @return Response from the API call
   */
  async generateVOIReport(
    customerId: bigint,
    accept: string,
    contentType: string,
    callbackUrl?: string,
    body?: RequestConstraintsVOI,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<GenerateVOIReportResponse>> {
    const req = this.createRequest('POST');
    const mapped = req.prepareArgs({
      customerId: [customerId, bigint()],
      accept: [accept, string()],
      contentType: [contentType, string()],
      callbackUrl: [callbackUrl, optional(string())],
      body: [body, optional(requestConstraintsVOISchema)],
    });
    req.header('Accept', mapped.accept);
    req.header('Content-Type', mapped.contentType);
    req.query('callbackUrl', mapped.callbackUrl);
    req.json(mapped.body);
    req.appendTemplatePath`/decisioning/v2/customers/${mapped.customerId}/voi`;
    req.throwOn(400, Error1Error, 'Bad Request');
    return req.callAsJson(generateVOIReportResponseSchema, requestOptions);
  }
}
