/**
 * Finicity APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import { Error1Error } from '../errors/error1Error';
import {
  GeneratePrequalificationReportCRAResponse,
  generatePrequalificationReportCRAResponseSchema,
} from '../models/generatePrequalificationReportCRAResponse';
import {
  GeneratePrequalificationReportNonCRAResponse,
  generatePrequalificationReportNonCRAResponseSchema,
} from '../models/generatePrequalificationReportNonCRAResponse';
import {
  GenerateVOAReportResponse,
  generateVOAReportResponseSchema,
} from '../models/generateVOAReportResponse';
import {
  GenerateVOAWithIncomeReportResponse,
  generateVOAWithIncomeReportResponseSchema,
} from '../models/generateVOAWithIncomeReportResponse';
import {
  RequestConstraints,
  requestConstraintsSchema,
} from '../models/requestConstraints';
import {
  RequestConstraintsGenerateVOAReport,
  requestConstraintsGenerateVOAReportSchema,
} from '../models/requestConstraintsGenerateVOAReport';
import {
  RequestConstraintsPrequal,
  requestConstraintsPrequalSchema,
} from '../models/requestConstraintsPrequal';
import { bigint, optional, string } from '../schema';
import { BaseController } from './baseController';

export class VerifyAssetsController extends BaseController {
  /**
   * Generate a Verification of Assets (VOA) report for all checking, savings, money market, and
   * investment accounts for the given customer. This service retrieves up to twelve months of
   * transaction history for each account and uses this information to generate the VOA report.
   *
   * This is a premium service. The billing rate is the variable rate for Verification of Assets under
   * the current subscription plan. The billable event is the successful generation of a VOA report.
   *
   * HTTP status of 202 (Accepted) means the report is being generated. When the report is finished, a
   * notification will be sent to the specified report callback URL, if specified.
   *
   * If no account of type of checking, savings, money market, or investment is found, the service will
   * return HTTP 400 (Bad Request).
   *
   * @param customerId   Finicity ID for the customer
   * @param accept       Replace 'json' with 'xml' if preferred
   * @param contentType  Replace 'json' with 'xml' if preferred
   * @param callbackUrl  The Report Listener URL to receive
   *                                                                   notifications (optional, must be URL-encoded).
   * @param body
   * @return Response from the API call
   */
  async generateVOAReport(
    customerId: bigint,
    accept: string,
    contentType: string,
    callbackUrl?: string,
    body?: RequestConstraintsGenerateVOAReport,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<GenerateVOAReportResponse>> {
    const req = this.createRequest('POST');
    const mapped = req.prepareArgs({
      customerId: [customerId, bigint()],
      accept: [accept, string()],
      contentType: [contentType, string()],
      callbackUrl: [callbackUrl, optional(string())],
      body: [body, optional(requestConstraintsGenerateVOAReportSchema)],
    });
    req.header('Accept', mapped.accept);
    req.header('Content-Type', mapped.contentType);
    req.query('callbackUrl', mapped.callbackUrl);
    req.json(mapped.body);
    req.appendTemplatePath`/decisioning/v3/customers/${mapped.customerId}/voa`;
    req.throwOn(400, Error1Error, 'Bad Request');
    return req.callAsJson(generateVOAReportResponseSchema, requestOptions);
  }

  /**
   * Generate a Verification of Assets with Income (VOAI) report for all checking, savings, money market,
   * and investment accounts for the given customer. This service retrieves up to 24 months of
   * transaction history for each account and uses this information to generate the VOAI report. The
   * report includes 1 - 6 months of all debit and credit transactions for asset verification. By default,
   * the history is set to 61 days, however, you can change the transaction history in this section by
   * setting the fromDate parameter. The report also includes up to 24 months of income credit
   * transactions (ordered by account and confidence level) regardless of fromDate for income
   * verification.
   *
   * This is a premium service. The billable event is the successful generation of a VOAI report.
   *
   * A report consumer must be created for the given customer before calling Generate VOAI Report (see
   * Report Consumers).
   *
   * After making this call, the client app may wait for a notification to be sent to the Report Listener
   * Service, or it may enter a loop, which should wait 20 seconds and then call the service Get Report
   * to see if the report is finished. While the report is being generated, Get Report will return a
   * minimal report with status inProgress. The loop should repeat every 20 seconds until Get Report
   * returns a different status.
   *
   * If using the listener service, the following format must be followed and the webhook must respond to
   * the Finicity API with a 200 series code:
   *
   * https://api.finicity.com/decisioning/v2/customers/[customerId]/voaHistory?callbackUrl=[webhookUrl]
   *
   * HTTP status of 202 (Accepted) means the report is being generated. When the report is finished, a
   * notification will be sent to the specified report callback URL, if specified.
   *
   * If no account of type of checking, savings, money market, or investment is found, the service will
   * return HTTP 400 (Bad Request).
   *
   * @param customerId   Finicity Id of the customer
   * @param accept       Replace 'json' with 'xml' if preferred
   * @param contentType  Replace 'json' with 'xml' if preferred
   * @param callbackUrl  The Report Listener URL to receive notifications (optional, must
   *                                                  be URL-encoded).
   * @param body
   * @return Response from the API call
   */
  async generateVOAWithIncomeReport(
    customerId: bigint,
    accept: string,
    contentType: string,
    callbackUrl?: string,
    body?: RequestConstraints,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<GenerateVOAWithIncomeReportResponse>> {
    const req = this.createRequest('POST');
    const mapped = req.prepareArgs({
      customerId: [customerId, bigint()],
      accept: [accept, string()],
      contentType: [contentType, string()],
      callbackUrl: [callbackUrl, optional(string())],
      body: [body, optional(requestConstraintsSchema)],
    });
    req.header('Accept', mapped.accept);
    req.header('Content-Type', mapped.contentType);
    req.query('callbackUrl', mapped.callbackUrl);
    req.json(mapped.body);
    req.appendTemplatePath`/decisioning/v2/customers/${mapped.customerId}/voaHistory`;
    req.throwOn(400, Error1Error, 'Bad Request');
    return req.callAsJson(
      generateVOAWithIncomeReportResponseSchema,
      requestOptions
    );
  }

  /**
   * Generate a Prequalification Report (preQualVoa) for all checking, savings, money market, and
   * investment accounts for the given customer. This service retrieves account and owner information as
   * well as the number of NSFs for any account that is a checking account for the customer.
   *
   * This is a premium service. The billing rate is billed per report for the Prequalification report.
   *
   * After making this call, the client app may wait for a notification to be sent to the Report Listener
   * Service, or it may enter a loop, which should wait 20 seconds and then call the service Get Report
   * to see if the report is finished. While the report is being generated, Get Report will return a
   * minimal report with status inProgress. The loop should repeat every 20 seconds until Get Report
   * returns a different status.
   *
   * If using the listener service, the following format must be followed and the webhook must respond to
   * the Finicity API with a 200 series code:
   *
   * https://api.finicity.com/decisioning/v2/customers/[customerId]/preQualVoa?callbackUrl=[webhookUrl]
   *
   * HTTP status of 202 (Accepted) means the report is being generated. When the report is finished, a
   * notification will be sent to the specified report callback URL, if specified.
   *
   * If no account type of checking, savings, money market, or investment is found, the service will
   * return HTTP 400 (Bad Request).
   *
   * @param customerId   Finicity's ID of the customer
   * @param accept       Replace 'json' with 'xml' if preferred
   * @param contentType  Replace 'json' with 'xml' if preferred
   * @param callbackUrl  The Report Listener URL to receive notifications
   *                                                         (optional, must be URL-encoded).
   * @param body
   * @return Response from the API call
   */
  async generatePrequalificationReport(
    customerId: bigint,
    accept: string,
    contentType: string,
    callbackUrl?: string,
    body?: RequestConstraintsPrequal,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<GeneratePrequalificationReportCRAResponse>> {
    const req = this.createRequest('POST');
    const mapped = req.prepareArgs({
      customerId: [customerId, bigint()],
      accept: [accept, string()],
      contentType: [contentType, string()],
      callbackUrl: [callbackUrl, optional(string())],
      body: [body, optional(requestConstraintsPrequalSchema)],
    });
    req.header('Accept', mapped.accept);
    req.header('Content-Type', mapped.contentType);
    req.query('callbackUrl', mapped.callbackUrl);
    req.json(mapped.body);
    req.appendTemplatePath`/decisioning/v2/customers/${mapped.customerId}/preQualVoa`;
    req.throwOn(400, Error1Error, 'Bad Request');
    return req.callAsJson(
      generatePrequalificationReportCRAResponseSchema,
      requestOptions
    );
  }

  /**
   * Used to retrieve all checking, savings, money market, and investment accounts for a customer. The
   * account, owner information, and the number of insufficient funds (NSFs) for checking accounts are
   * also provided.
   *
   * **Note**: This is a premium service, billable per every successful API call.
   *
   *
   * **Error codes**
   *
   * * **HTTP 200**: Success. The report is generating. When it’s finished, a notification is sent to the
   * report callback URL as specified in the report webhook.
   *
   * * ** HTTP 400**: Bad Request. No account type of checking, savings, money market, or investment was
   * found.
   *
   * @param customerId   Finicity's ID of the customer
   * @param accept       Replace 'json' with 'xml' if preferred
   * @param contentType  Replace 'json' with 'xml' if preferred
   * @param callbackUrl  The Report Listener URL to receive notifications
   *                                                         (optional, must be URL-encoded).
   * @param body
   * @return Response from the API call
   */
  async generatePrequalificationNonCRAReport(
    customerId: bigint,
    accept: string,
    contentType: string,
    callbackUrl?: string,
    body?: RequestConstraintsPrequal,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<GeneratePrequalificationReportNonCRAResponse>> {
    const req = this.createRequest('POST');
    const mapped = req.prepareArgs({
      customerId: [customerId, bigint()],
      accept: [accept, string()],
      contentType: [contentType, string()],
      callbackUrl: [callbackUrl, optional(string())],
      body: [body, optional(requestConstraintsPrequalSchema)],
    });
    req.header('Accept', mapped.accept);
    req.header('Content-Type', mapped.contentType);
    req.query('callbackUrl', mapped.callbackUrl);
    req.json(mapped.body);
    req.appendTemplatePath`/decisioning/v2/customers/${mapped.customerId}/assetSummary`;
    req.throwOn(400, Error1Error, 'Bad Request');
    return req.callAsJson(
      generatePrequalificationReportNonCRAResponseSchema,
      requestOptions
    );
  }
}
