/**
 * Finicity APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  bigint,
  boolean,
  expandoObject,
  lazy,
  number,
  optional,
  Schema,
  string,
} from '../schema';
import { ErrorMessage, errorMessageSchema } from './errorMessage';
import { TypeEnum, typeEnumSchema } from './typeEnum';
import {
  VOETransactionsReportInstitution,
  vOETransactionsReportInstitutionSchema,
} from './vOETransactionsReportInstitution';
import {
  VOETransactionsRequestConstraints,
  vOETransactionsRequestConstraintsSchema,
} from './vOETransactionsRequestConstraints';

export interface VOETransactionsReportRecord {
  /** Finicity's report ID */
  id: string;
  /** Finicity’s portfolio ID associated with the consumer on the report. */
  portfolioId: string;
  /** Finicity Internal Use Only */
  gseEnabled: boolean;
  /** Customer type */
  customerType: string;
  /** Finicity ID for the customer */
  customerId: bigint;
  /** Unique requestId for this specific call request */
  requestId: string;
  /** Title of the report */
  title: string;
  /** Finicity report consumer ID (max length 32 characters) */
  consumerId: string;
  /** Last 4 digits of the report consumer’s Social Security number */
  consumerSsn: string;
  /** Name of Finicity partner requesting the report */
  requesterName: string;
  constraints?: VOETransactionsRequestConstraints;
  /** Report type */
  type: TypeEnum;
  /** inProgress, success, or failure */
  status: string;
  /** The date the report was generated */
  createdDate: bigint;
  /** The postedDate of the earliest transaction analyzed for this report */
  startDate: bigint;
  /** The postedDate of the latest transaction analyzed for this report */
  endDate: bigint;
  /** Number of days covered by the report */
  days: number;
  /** This will display true if the report covers more than 180 days */
  seasoned: boolean;
  /** A list of institution records, including information about the individual accounts used in this report */
  institutions: VOETransactionsReportInstitution[];
  errors?: ErrorMessage[];
  [key: string]: unknown;
}

export const vOETransactionsReportRecordSchema: Schema<VOETransactionsReportRecord> = expandoObject(
  {
    id: ['id', string()],
    portfolioId: ['portfolioId', string()],
    gseEnabled: ['gseEnabled', boolean()],
    customerType: ['customerType', string()],
    customerId: ['customerId', bigint()],
    requestId: ['requestId', string()],
    title: ['title', string()],
    consumerId: ['consumerId', string()],
    consumerSsn: ['consumerSsn', string()],
    requesterName: ['requesterName', string()],
    constraints: [
      'constraints',
      optional(lazy(() => vOETransactionsRequestConstraintsSchema)),
    ],
    type: ['type', typeEnumSchema],
    status: ['status', string()],
    createdDate: ['createdDate', bigint()],
    startDate: ['startDate', bigint()],
    endDate: ['endDate', bigint()],
    days: ['days', number()],
    seasoned: ['seasoned', boolean()],
    institutions: [
      'institutions',
      array(lazy(() => vOETransactionsReportInstitutionSchema)),
    ],
    errors: ['errors', optional(array(lazy(() => errorMessageSchema)))],
  }
);
