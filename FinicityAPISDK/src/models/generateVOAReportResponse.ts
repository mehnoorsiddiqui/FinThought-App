/**
 * Finicity APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  bigint,
  expandoObject,
  lazy,
  nullable,
  optional,
  Schema,
  string,
} from '../schema';
import { ErrorMessage, errorMessageSchema } from './errorMessage';
import {
  ReportConstraints,
  reportConstraintsSchema,
} from './reportConstraints';
import { TypeEnum, typeEnumSchema } from './typeEnum';

export interface GenerateVOAReportResponse {
  /** The Finicity report ID */
  id: string;
  /** A unique identifier that will be consistent across all reports created for the same customer. */
  portfolioId: string;
  /** Type of the customer */
  customerType: string;
  /** Finicity's customer ID */
  customerId: bigint;
  /** Finicity indicator to track all activity associated with this report. */
  requestId: string;
  /** Name of Finicity partner requesting the report */
  requesterName: string;
  /** The date the report was generated */
  createdDate: bigint;
  /** Finicity's title of the report */
  title: string;
  /** Finicity ID of the consumer */
  consumerId: string;
  /** Last 4 digits of the report consumerâ€™s Social Security number */
  consumerSsn: string;
  constraints?: ReportConstraints;
  /** Type of the report */
  type: TypeEnum;
  /** inProgress, success, or failure */
  status: string;
  errors?: ErrorMessage[];
  source?: string;
  /** The count for the total number of insufficient funds transactions, based on the `fromDate` of the report. */
  totNumberInsufficientFundsFeeDebitTxAccount: bigint | null;
  /** The count for the total number of insufficient funds transactions for the last two months, based on the `fromDate` of the report. */
  totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount: bigint | null;
  /** The number of days since the most recent insufficient funds transaction, based on the `fromDate` of the report. */
  totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount: bigint | null;
  [key: string]: unknown;
}

export const generateVOAReportResponseSchema: Schema<GenerateVOAReportResponse> = expandoObject(
  {
    id: ['id', string()],
    portfolioId: ['portfolioId', string()],
    customerType: ['customerType', string()],
    customerId: ['customerId', bigint()],
    requestId: ['requestId', string()],
    requesterName: ['requesterName', string()],
    createdDate: ['createdDate', bigint()],
    title: ['title', string()],
    consumerId: ['consumerId', string()],
    consumerSsn: ['consumerSsn', string()],
    constraints: ['constraints', optional(lazy(() => reportConstraintsSchema))],
    type: ['type', typeEnumSchema],
    status: ['status', string()],
    errors: ['errors', optional(array(lazy(() => errorMessageSchema)))],
    source: ['source', optional(string())],
    totNumberInsufficientFundsFeeDebitTxAccount: [
      'totNumberInsufficientFundsFeeDebitTxAccount',
      nullable(bigint()),
    ],
    totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount: [
      'totNumberInsufficientFundsFeeDebitTxOver2MonthsAccount',
      nullable(bigint()),
    ],
    totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount: [
      'totNumberDaysSinceMostRecentInsufficientFundsFeeDebitTxAccount',
      nullable(bigint()),
    ],
  }
);
