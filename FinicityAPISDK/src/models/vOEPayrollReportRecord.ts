/**
 * Finicity APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  bigint,
  boolean,
  expandoObject,
  lazy,
  optional,
  Schema,
  string,
} from '../schema';
import { ErrorMessage, errorMessageSchema } from './errorMessage';
import {
  PayrollVOEEmploymentHistory,
  payrollVOEEmploymentHistorySchema,
} from './payrollVOEEmploymentHistory';
import {
  PayrollVOEReportConstraints,
  payrollVOEReportConstraintsSchema,
} from './payrollVOEReportConstraints';
import { TypeEnum, typeEnumSchema } from './typeEnum';

export interface VOEPayrollReportRecord {
  /** Finicity's report ID */
  id: string;
  /** Finicity’s portfolio ID associated with the consumer on the report. */
  portfolioId: string;
  /** Finicity internal use only */
  gseEnabled: boolean;
  /** The date the report was generated */
  createdDate: bigint;
  /** Name of Finicity partner requesting the report */
  requesterName: string;
  /** Unique requestId for this specific call request */
  requestId: string;
  /** Customer type */
  customerType: string;
  /** Finicity ID for the customer */
  customerId: bigint;
  /** Finicity report consumer ID (max length 32 characters) */
  consumerId: string;
  /** Last 4 digits of the report consumer’s Social Security number */
  consumerSsn: string;
  /** Report type */
  type: TypeEnum;
  /** Title of the report */
  title: string;
  /** inProgress, success, or failure */
  status: string;
  constraints: PayrollVOEReportConstraints;
  /** An array of employment histories, one for each of the consumer's verified employers. */
  employmentHistory: PayrollVOEEmploymentHistory[];
  errors?: ErrorMessage[];
  [key: string]: unknown;
}

export const vOEPayrollReportRecordSchema: Schema<VOEPayrollReportRecord> = expandoObject(
  {
    id: ['id', string()],
    portfolioId: ['portfolioId', string()],
    gseEnabled: ['gseEnabled', boolean()],
    createdDate: ['createdDate', bigint()],
    requesterName: ['requesterName', string()],
    requestId: ['requestId', string()],
    customerType: ['customerType', string()],
    customerId: ['customerId', bigint()],
    consumerId: ['consumerId', string()],
    consumerSsn: ['consumerSsn', string()],
    type: ['type', typeEnumSchema],
    title: ['title', string()],
    status: ['status', string()],
    constraints: ['constraints', lazy(() => payrollVOEReportConstraintsSchema)],
    employmentHistory: [
      'employmentHistory',
      array(lazy(() => payrollVOEEmploymentHistorySchema)),
    ],
    errors: ['errors', optional(array(lazy(() => errorMessageSchema)))],
  }
);
